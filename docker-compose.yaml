version: '3.8'

services:
  mongodb:
    image: mongo:7-jammy
    container_name: mongodb
    ports:
      - "27017:27017" # Mapeo del puerto para la conexión a MongoDB
    environment:
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_HOST: ${MONGO_HOST}
    volumes:
      - mongo_data:/data/db
      - ./data-mongo.js:/docker-entrypoint-initdb.d/data-mongo.js:ro
    restart: always
    networks:
      - db-network

  web:
    build: ./flask-app
    container_name: webhost
    ports:
      - "5000:3000" # Puerto externo 5000 para la aplicación Flask
    environment:
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_HOST: ${MONGO_HOST}
      MONGO_URI: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/${MONGO_DATABASE} # URI de conexión a MongoDB
    depends_on:
      - mongodb # Garantiza que MongoDB se inicie antes del servidor Flask
    restart: always
    networks:
      - web-network
      - db-network

  proxyhost:
    build:
      context: ./reverse-proxy
    container_name: proxyhost
    ports:
      - "80:80"   # Puerto externo HTTP
      - "443:443" # Puerto externo HTTPS
    depends_on:
      - web # Asegura que el contenedor web se inicie antes
    networks:
      - web-network

volumes:
  mongo_data:

networks:
  web-network:
    name: web-network
  db-network:
    name: db-network
